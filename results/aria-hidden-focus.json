{
  "div_aria-describedby_aria-hidden_role_style_tabindex": "To ensure that the aria-hidden element is not focusable and does not contain focusable elements, you need to remove the `tabindex` attribute and check its content for any focusable elements. The modified code should look like this:\n\n```html\n<div aria-describedby=\"...\" aria-hidden=\"=\"true\" role=\"tabpanel\" style=\"width: 278px;\">\n  <!-- Make sure there are no focusable elements inside this div -->\n</div>\n```\n\nIf there are focusable elements inside the div, you should set their `tabindex` attribute to `-1` to make them unfocusable. For example, if there is a link inside the div:\n\n```html\n<div aria-describedby=\"...\" aria-hidden=\"=\"true\" role=\"tabpanel\" style=\"width: 278px;\">\n  <a href=\"example.com\" tabindex=\"-1\">Unfocusable link</a>\n</div>\n```",
  "li_aria-controls_aria-hidden_aria-selected_role_button_aria-required_role_tabindex_type": "To ensure that the aria-hidden element is not focusable and does not contain focusable elements, you can add `tabindex=\"-1\"` to the `li` element and its child elements. This will remove them from the natural tab order and make them unfocusable. Here's the modified code:\n\n```html\n<li aria-controls=\"navigation01\" aria-hidden=\"true\" aria-selected=\"false\" role=\"presentation\" tabindex=\"-1\">\n  <button aria-required=\"false\" role=\"button\" tabindex=\"-1\" type=\"button\"></button>\n</li>\n```\n\nBy adding `tabindex=\"-1\"` to both the `li` and `button` elements, they will not be focusable, and users will not be able to interact with them using keyboard navigation.",
  "div_aria-hidden_style_tabindex": "<div aria-hidden=\"true\" style=\"width: 290px;\" tabindex=\"-1\">\n  <!-- Ensure that any interactive elements inside this div are also not focusable by adding tabindex=\"-1\" to them. -->\n</div>"
}
