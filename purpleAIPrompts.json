{
  "area-alt": {
    "prompt": "Explain how to ensure alt text is included inside <area>",
    "needsHtml": false
  },
  "aria-allowed-attr": {
    "prompt": "Explain how to ensure ARIA attributes are allowed for an element's role: ${htmlSnippet}",
    "needsHtml": true
  },
  "aria-command-name": {
    "prompt": "Explain briefly how to ensure every aria button, link and menuitem has an accessible name",
    "needsHtml": false
  },
  "aria-hidden-body": {
    "prompt": "Explain how to ensure aria-hidden='true' is not present on the document body.<body aria-hidden=\\”true\\\">some-text</body>",
    "needsHtml": false
  },
  "aria-hidden-focus": {
    "prompt": "How to ensure aria-hidden elements are not focusable nor contain focusable elements: ${htmlSnippet}",
    "needsHtml": true
  },
  "aria-input-field-name": {
    "prompt": "How to ensure every ARIA input field has an accessible name: ${htmlSnippet}",
    "needsHtml": true
  },
  "aria-meter-name": {
    "prompt": "Explain how to ensure ARIA meter node has an accessible name",
    "needsHtml": false
  },
  "aria-progressbar-name": {
    "prompt": "Explain how to ensure ARIA progressbar node has an accessible name",
    "needsHtml": false
  },
  "aria-required-attr": {
    "prompt": "Explain how to ensure elements with ARIA roles have all required ARIA attributes: ${htmlSnippet}",
    "needsHtml": true
  },
  "aria-required-children": {
    "prompt": "Explain how to ensure HTML elements with aria roles contain corresponding child roles: ${htmlSnippet}",
    "needsHtml": true
  },
  "aria-required-parent": {
    "prompt": "Explain how to ensure HTML elements with aria roles that require parent roles are contained by them: ${htmlSnippet}",
    "needsHtml": true
  },
  "aria-roles": {
    "prompt": "How to ensure valid element role: ${htmlSnippet}",
    "needsHtml": true
  },
  "aria-toggle-field-name": {
    "prompt": "How to ensure every ARIA toggle field has an accessible name: ${htmlSnippet}",
    "needsHtml": true
  },
  "aria-tooltip-name": {
    "prompt": "Explain how to ensure ARIA tooltip node has an accessible name: ```<div role=\"tooltip\" id=\"some-id\" aria-label=\"\"></div>```",
    "needsHtml": false
  },
  "aria-valid-attr-value": {
    "prompt": "How to ensure valid values for common aria attributes: ${htmlSnippet}",
    "needsHtml": true
  },
  "aria-valid-attr": {
    "prompt": "How to ensure aria attributes are valid: ${htmlSnippet}",
    "needsHtml": true
  },
  "blink": {
    "prompt": "How to avoid the use of <blink> elements",
    "needsHtml": false
  },
  "button-name": {
    "prompt": "Provide an example code snippet with explanation of button with aria-label or aria-labelledby.",
    "needsHtml": false
  },
  "bypass": {
    "prompt": "Give code examples where HTML page has an internal skip link or a heading or a landmark region",
    "needsHtml": false
  },
  "definition-list": {
    "prompt": "Fix this code to include 1 or more <dd> inside <dt> <dl> <dt>some-dt</dt> <div> <dt>some-dt</dt> </div> </dl>",
    "needsHtml": false
  },
  "dlitem": {
    "prompt": "Explain why <dt> and <dd> elements must be contained by a <dl>",
    "needsHtml": false
  },
  "document-title": {
    "prompt": "Give a code example to add a title to a HTML document using <title>",
    "needsHtml": false
  },
  "form-field-multiple-labels": {
    "prompt": "Explain with example how to ensure form field does not have multiple label elements",
    "needsHtml": false
  },
  "frame-focusable-content": {
    "prompt": "Explain with example how to ensure <frame> and <iframe> elements with focusable content do not have tabindex=-1.",
    "needsHtml": false
  },
  "image-alt": {
    "prompt": "Ensure an image element is accessible to the screen reader via alt, or aria-label attributes. Also, give me snippets of image elements with the role of none or presentation.",
    "needsHtml": false
  },
  "input-button-name": {
    "prompt": "Suggest ways the input button is accessible to the screen reader: ${htmlSnippet} ",
    "needsHtml": true
  },
  "label": {
    "prompt": "Explain with an example of a form element how to ensure form element has a label that is semantically correct and accessible.",
    "needsHtml": false
  },
  "link-name": {
    "prompt": "Suggest ways to ensure the link labels are not duplicated without changing the content within the anchor tag and without introducing a visually hidden item in the DOM: ${htmlSnippet}",
    "needsHtml": true
  },
  "meta-refresh": {
    "prompt": "Explain with JavaScript snippet how to ensure <meta http-equiv=\\\"refresh\\\"> is not used for delayed refresh",
    "needsHtml": false
  },
  "meta-viewport": {
    "prompt": "Ensure the meta element does not disable text scaling and zooming (omit user-scalable attribute if present). Add any other thing to make it more accessible.",
    "needsHtml": false
  },
  "nested-interactive": {
    "prompt": "How to ensure this snippet has no nested interactivity: ${htmlSnippet}",
    "needsHtml": true
  },
  "no-autoplay-audio": {
    "prompt": "Provide an example of a video or audio element with autoplay attribute that has control mechanism and does not autoplay for more than 3 seconds. Add other accessible attributes if necessary.",
    "needsHtml": false
  },
  "object-alt": {
    "prompt": "Given this object element, what are ways to make it more accessible to screen readers? ``` <object data=\"path/to/content\"><!-- some content --></object> ```",
    "needsHtml": false
  },
  "role-img-alt": {
    "prompt": "Given this snippet of code, what are ways for screen-readers to access the elements with image roles? ``` <div role=\"img\" id=\"some-id\"></div> ```",
    "needsHtml": false
  },
  "scrollable-region-focusable": {
    "prompt": "Ensure this element that is scrollable is keyboard accessible ``` <div id=\"some-id\"> <!-- scrollable content --> </div> ```",
    "needsHtml": false
  },
  "select-name": {
    "prompt": "Ways to make this select element accessible using for and id? <div id=”someId”> <select aria-labelledby=”someId”> <option>someOption</option> </select> </div>",
    "needsHtml": false
  },
  "server-side-image-map": {
    "prompt": "Given a server-side image map, give me an example with explanation of a client-side image map that has an <img> element and with the usemap attribute to a map element that is accessible.",
    "needsHtml": false
  },
  "svg-img-alt": {
    "prompt": "Ways to make the SVG elements more accessible to the screen readers? ```<svg role=\"img\"> <circle cx=\"some-x\" cy=\"some-y\" r=\"some-r\" fill=\"some-fill\" ></circle> </svg>```",
    "needsHtml": false
  },
  "td-headers-attr": {
    "prompt": "Explain with example of a table on how to ensure each cell in a table uses the headers attribute to refer only to other cells in that table.",
    "needsHtml": false
  },
  "th-has-data-cells": {
    "prompt": "Provide an example of an accessible table where the <th> elements and elements with role=columnheader/row header have data cells they describe",
    "needsHtml": false
  },
  "valid-lang": {
    "prompt": "What are valid values for the lang attribute?",
    "needsHtml": false
  },
  "video-caption": {
    "prompt": "Give an example of a video with the track element, and other attributes which ensure that the video element is accessible.",
    "needsHtml": false
  },
  "autocomplete-valid": {
    "prompt": "Give code example for providing appropriate autocomplete attribute values in HTML form fields",
    "needsHtml": false
  },
  "avoid-inline-spacing": {
    "prompt": "How to ensure style attribute does not have forced line-height,letter-spacing and word-spacing property so that inline text spacing is adjustable with custom stylesheets: ${htmlSnippet}",
    "needsHtml": true
  },
  "aria-allowed-role": {
    "prompt": "How to ensure element has valid aria role: ${htmlSnippet}",
    "needsHtml": true
  },
  "aria-dialog-name": {
    "prompt": "Explain how to ensure that each element with role=\"dialog\" or role=\"alertdialog\" has aria-label attribute or aria-labelledby ```<div role=\"dialog\" id=\"some-id\"></div>```",
    "needsHtml": false
  },
  "aria-text": {
    "prompt": "Explain how to ensure that each element with role=\"dialog\" or role=\"alertdialog\" has aria-label attribute or aria-labelledby ```<div role=\"dialog\" id=\"some-id\"></div>```",
    "needsHtml": false
  },
  "aria-treeitem-name": {
    "prompt": "Explain how to ensure that each element with role=\"treeitem” has aria-label attribute or aria-labelledby ```<div role=\"treeitem\" id=\"some-id\"></div>```",
    "needsHtml": false
  },
  "heading-order": {
    "prompt": "Explain with code where h1 through h6 element tags appear in a sequentially-descending order to improve accessibility",
    "needsHtml": false
  },
  "image-redundant-alt": {
    "prompt": "Give code examples where the alternative text of images are repeated in the text and provide a solution.",
    "needsHtml": false
  },
  "landmark-banner-is-top-level": {
    "prompt": "Explain with example on how to ensure banner landmark is at top level",
    "needsHtml": false
  },
  "landmark-complementary-is-top-level": {
    "prompt": "Explain with example on how to ensure complementary landmark or aside is at top level",
    "needsHtml": false
  },
  "landmark-contentinfo-is-top-level": {
    "prompt": "Explain with example on how to ensure contentinfo landmark is at top level",
    "needsHtml": false
  },
  "landmark-main-is-top-level": {
    "prompt": "Explain with example on how to ensure main landmark is at top level",
    "needsHtml": false
  },
  "landmark-no-duplicate-banner": {
    "prompt": "Explain with example on how to ensure document has at most one banner landmark",
    "needsHtml": false
  },
  "landmark-no-duplicate-contentinfo": {
    "prompt": "Explain with example on how to ensure document has at most one contentinfo landmark",
    "needsHtml": false
  },
  "landmark-no-duplicate-main": {
    "prompt": "Explain with example on how to ensure document has at most one main landmark",
    "needsHtml": false
  },
  "landmark-one-main": {
    "prompt": "Explain with example on how to ensure document has a main landmark",
    "needsHtml": false
  },
  "landmark-unique": {
    "prompt": "Explain with example on how to ensure landmarks have a unique role or role/label/title.",
    "needsHtml": false
  },
  "meta-viewport-large": {
    "prompt": "Explain briefly with example how to ensure the meta element does not disable text scaling and zooming (omit user-scalable attribute if present).",
    "needsHtml": false
  },
  "presentation-role-conflict": {
    "prompt": "Explain briefly with examples on how to ensure elements marked as presentational should not have global ARIA or tabindex attributes.",
    "needsHtml": false
  },
  "region": {
    "prompt": "Explain briefly with example on how to ensure page content is contained by landmarks",
    "needsHtml": false
  },
  "scope-attr-valid": {
    "prompt": "Explain briefly with example on how to ensure the scope attribute is used correctly on tables.",
    "needsHtml": false
  },
  "skip-link": {
    "prompt": "Explain briefly with example on how to ensure HTML and CSS of a skip link navigation that is focusable and at the top right after the opening body tag.",
    "needsHtml": false
  },
  "tabindex": {
    "prompt": "How to ensure accessible tab order for code with tabindex greater than index 0 to a non-interactive element",
    "needsHtml": false
  },
  "table-duplicate-name": {
    "prompt": "Given a table, what are ways to ensure that the caption does not contain the same text? ``` <table> <caption>some text</caption> <tr><th>Data</th></tr> <caption>some text</caption> <tr><td>Data</td></tr> </table> ```",
    "needsHtml": false
  }
}
